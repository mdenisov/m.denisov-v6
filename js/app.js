// Generated by CoffeeScript 1.6.3
define(function(require, exports, module) {
  "use strict";
  var $, Backbone, PubSub, app, _;
  _ = require("underscore");
  $ = require("jquery");
  Backbone = require("backbone");
  PubSub = require("pubsub");
  app = module.exports;
  app.root = "/photosite/";
  app.view = {};
  app.subView = null;
  app.modules = {};
  app.loader = {};
  app.init = function() {
    app.DEBUG = true;
    app.$window = $(window);
    app.$document = $(document);
    app.$body = $('body');
    app.$document.on('resize', function(e) {
      return PubSub.trigger('app:resize', e);
    });
    app.$document.on('mousemove', function(e) {
      return PubSub.trigger('app:mousemove', e);
    });
    return app.$document.on('keydown', function(e) {
      return PubSub.trigger('app:keydown', e);
    });
  };
  app.isValidUrl = function(href) {
    if (!href) {
      return false;
    } else if (href.indexOf('javascript:') !== -1) {
      return false;
    } else if (href[0] === '#' && href.length === 1) {
      return false;
    } else if (href.indexOf('../') !== -1) {
      console.error('Attempting to load a relative url, bad code monkey! (' + href + ')');
      return false;
    } else if (href[0] !== '/' && href.indexOf('://') === -1) {
      console.error('Attempting to load a relative url, bad code monkey! (' + href + ')');
      return false;
    }
    return true;
  };
  app.getDefinedRoute = function(fragment) {};
  app.loadHtml = function(href) {};
  app.delay = function(time, callback) {
    return setTimeout((function() {
      return callback();
    }), time);
  };
  app.loader = new (Backbone.View.extend({
    el: '#loader',
    initialize: function() {
      this.$el = $(this.el);
      this.$progress = this.$el.children();
      this.pubSub = {
        'app:rendered': this.start
      };
      return PubSub.attach(this.pubSub, this);
    },
    start: function() {
      var $els, imageCount, l, total, _results;
      this.$progress.html('0');
      this.$el.show();
      console.log(app.view);
      $els = app.view.$el.find('img');
      total = $els.length;
      imageCount = 0;
      l = total;
      if (l > 0) {
        _results = [];
        while (l--) {
          $($els[l]).on('load', function() {});
          ++imageCount;
          this.$progress.html((total / imageCount) * 100);
          if (total === imageCount) {
            _results.push(this.done());
          } else {
            _results.push(void 0);
          }
        }
        return _results;
      } else {
        return this.done();
      }
    },
    done: function() {
      return this.$el.hide();
    }
  }));
  $(document).ready(function() {
    return app.init();
  });
  return console.log(app);
});
